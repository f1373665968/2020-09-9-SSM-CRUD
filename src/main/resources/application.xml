<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--spring配置文件-->

    <!--数据源，事务控制-->
    <context:property-placeholder location="classpath:dbconfig.properties"/>

    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="url" value="${jdbc.jdbcUrl}"/>
        <property name="driverClassName" value="${jdbc.driverClass}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--声明直接扫描组件，不扫描控制器-->
    <context:component-scan base-package="com.f">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--配置MyBatis的整合-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis.xml"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!--配置一个可以执行的sqlSession-->
    <bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSession">
        <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"/>
        <constructor-arg name="executorType" value="BATCH"/>
    </bean>


    <!--配置mybatis的扫描器，将mybatis的接口的实现加入到ioc容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!--扫描所有的dao层的接口，加入到ioc容器中-->
        <property name="basePackage" value="com.f.crud.dao"/>
    </bean>

    <!--配置事务控制-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--控制数据源-->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--开启基于注解的事务，使用xml配置形式的事务(主要使用的都是配置式)-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--<aop:config>
    &lt;!&ndash;切入点表达式&ndash;&gt;
        <aop:pointcut id="txPoint" expression="execution(* com.f.crud.service..*(..))"/>
        &lt;!&ndash;配置事务增强&ndash;&gt;
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
    </aop:config>
    &lt;!&ndash;配置事务增强，事务如何切入&ndash;&gt;
    <tx:advice id="txAdvice">
        <tx:attributes>
            &lt;!&ndash;所有方法都是事务方法&ndash;&gt;
            <tx:method name="*"/>
            &lt;!&ndash;以get开始的所有方法&ndash;&gt;
            <tx:method name="get*" read-only="true"/>
        </tx:attributes>
    </tx:advice>-->
</beans>